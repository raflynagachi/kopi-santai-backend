// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	dto "git.garena.com/sea-labs-id/batch-01/rafly-nagachi/final-project-backend/dto"
	mock "github.com/stretchr/testify/mock"
)

// PaymentOptionService is an autogenerated mock type for the PaymentOptionService type
type PaymentOptionService struct {
	mock.Mock
}

// FindAll provides a mock function with given fields:
func (_m *PaymentOptionService) FindAll() ([]*dto.PaymentOptionRes, error) {
	ret := _m.Called()

	var r0 []*dto.PaymentOptionRes
	if rf, ok := ret.Get(0).(func() []*dto.PaymentOptionRes); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*dto.PaymentOptionRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPaymentOptionService interface {
	mock.TestingT
	Cleanup(func())
}

// NewPaymentOptionService creates a new instance of PaymentOptionService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPaymentOptionService(t mockConstructorTestingTNewPaymentOptionService) *PaymentOptionService {
	mock := &PaymentOptionService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
