// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// MenuHandler is an autogenerated mock type for the MenuHandler type
type MenuHandler struct {
	mock.Mock
}

// CreateMenu provides a mock function with given fields: c
func (_m *MenuHandler) CreateMenu(c *gin.Context) {
	_m.Called(c)
}

// DeleteByID provides a mock function with given fields: c
func (_m *MenuHandler) DeleteByID(c *gin.Context) {
	_m.Called(c)
}

// FindAll provides a mock function with given fields: c
func (_m *MenuHandler) FindAll(c *gin.Context) {
	_m.Called(c)
}

// FindAllUnscoped provides a mock function with given fields: c
func (_m *MenuHandler) FindAllUnscoped(c *gin.Context) {
	_m.Called(c)
}

// GetMenuDetail provides a mock function with given fields: c
func (_m *MenuHandler) GetMenuDetail(c *gin.Context) {
	_m.Called(c)
}

// UpdateMenu provides a mock function with given fields: c
func (_m *MenuHandler) UpdateMenu(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewMenuHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMenuHandler creates a new instance of MenuHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMenuHandler(t mockConstructorTestingTNewMenuHandler) *MenuHandler {
	mock := &MenuHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
